# Распространенные исключения:
# ImportError: ошибка импорта;
# IndexError: список проиндексирован с номером вне допустимого диапазона;
# NameError: используется неизвестная переменная;
# SyntaxError: код не может быть проанализирован должным образом;
# TypeError: функция вызывается для значения несоответствующего типа;
# ValueError: правильный тип, но с несоответствующим значением;
# ZeroDivisionError: деление на ноль

# Блок try содержит код, который может вызвать исключение.
# Если исключение возникнет, код в блоке try перестанет выполняться,
# а выполнится код в блоке except.
# Опциональный блок else отработает, если в try не возникает ошибки.
# Опциональный блок finally отработет после блока try/except независимо
# от того, возникло исключение или нет.

try:
    print(7 / 'ноль')
except ZeroDivisionError:
    print('Деление на 0!')
except (ValueError, TypeError):
    print('Произошла ошибка')
else:
    print('Ошибки не возникло')
finally:
    print('Пофиг, была ошибка или нет')

# Конструкция except без указанного исключения будет перехватывать
# все ошибки. Это следует использовать с осторожностью, т.к.
# это может выявить неожиданные ошибки и скрыть ошибки в коде.

# Оператор raise вызывает указанное исключение, если это нужно.
# Пример 1:
num = 100
if num > 100:
    raise ValueError('Превышение!')  # аргументы в скобках - опциональны
# Пример 2:
tweet = input('Enter tweet: ')
try:
    if len(tweet) > 42:
        raise Exception()
except:
    print('Error')
else:
    print('Posted')