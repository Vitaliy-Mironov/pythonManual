# https://docs-python.ru/tutorial/osnovnye-vstroennye-tipy-python/tip-dannyh-tuple-kortezh/

# кортежи - tuple() - НЕизменяемый тип последовательности

# Поддерживают общие операции с последовательностями:
# 'x in sequences' - проверка существования значения в последовательности
# 'sequence1 + sequence2' - конкатенация (сложение) последовательностей
# 'sequence * n' - увеличение последовательности в N раз
# 'sequence[i]' - получение значения элемента по индексу
# 'sequence[i:j]' - получение среза
# 'sequence[i:j:k]' - получение среза с заданным шагом
# 'len(sequence)' - вычисление длины последовательности
# 'min(sequence)' / 'max(sequence)' - наименьшее / наибольшее значение
# 'sequence.index(x)' - метод последовательности index() - позволяет узнать
#                       индекс первого вхождения элемента x
#                       в последовательность sequence.
#                       Вызывает ValueError, когда элемент x не найден.
# 'sequence.count(x)' - метод последовательности count() - позволяет узнать
#                       сколько раз указанный элемент появился
#                       в последовательности sequence.

# создание пустого кортежа
ex_tuple = ()

# создание одиночного кортежа
ex_tuple1 = 1,
ex_tuple2 = (1,)

# создание непустого кортежа
ex_tuple3 = 1, 'a', 3, 'b'
ex_tuple4 = (1, 'a', 3, 'b')

# Кортеж создаёт запятая, а не скобки. Скобки необязательны, за исключением
# случая пустого кортежа, или когда они необходимы, чтобы избежать
# синтаксической двусмысленности:
# f(a, b, c) - вызов функции с тремя аргументами
# f((a, b, c)) - вызов функции с кортежем в качестве единственного аргумента

# Преобразование строки str в кортеж тип tuple:
tuple('abc')  # ('a',' b',' c')
# Преобразование списка list в кортеж тип tuple:
tuple([1, 2, 3])  # (1, 2, 3)
# Преобразование множества set в кортеж тип tuple:
tuple({1, 2, 3})  # (1, 2, 3)
# Преобразование генератора в кортеж тип tuple:
tuple(range(5))  # (0, 1, 2, 3, 4)
